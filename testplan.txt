Test Case E:
	In this case, we first exhaust the whole 4096 memory size and store each returned pointer into a char pointer array. 
	After exhausting the total memory size, we free all the 15 even positions, for example: arr[0], arr[2], arr[4], arr[6]… 
	After freeing the even positions, we start to store things that are smaller than the size that has been freed. By doing this, 
	we are able to tell whether available memory gets split when the remaining size is bigger than metadata size + 1(the smallest size required to split)  





Test Case F:
	In this case, we first exhaust the whole 4096 memory size and store each returned pointer into a char pointer array. 
	After exhausting the total memory size, we free 15 consecutive positions, for example: arr[0], arr[1], arr[2], arr[3]…
	After freeing 15 consecutive positions, we store two random numbers that are larger than the size that has been freed, to see if the consecutive freed memory has been added up.
	in the end, if no error was printed, it means that we have stored every vacant memory location successfully.

